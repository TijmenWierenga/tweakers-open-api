openapi: 3.0.0
info:
  title: Demo API
  version: '1.0'
  description: A sample API to describe the super powers of OpenAPI
  contact:
    name: Tijmen Wierenga
    email: tijmen.wierenga@tweakers.net
servers:
  - url: 'http://localhost'
    description: local
  - url: 'http://localhost:3100'
    description: mock server
paths:
  /users:
    get:
      summary: List users
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
      operationId: get-users
      description: Returns a list of all registered users
    post:
      summary: Register new user
      operationId: post-users
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                format: uri
                example: 'http://localhost/users/my-username'
              description: URI to the created resource
              required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
      description: Registers a new user
      tags:
        - users
  '/users/{username}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
    get:
      summary: Get by username
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
      operationId: get-users-userId
      description: Gets a user by it's unique username
      tags:
        - users
tags:
  - name: users
components:
  schemas:
    User-read:
      title: User-read
      type: object
      properties:
        username:
          type: string
          x-faker: internet.userName
      required:
        - username
    User-write:
      title: User-write
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
          minLength: 8
      required:
        - username
        - password
